// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux (a=a[0], b=b[0], sel=sel[0], out=aMuxd0);
    Mux (a=a[1], b=b[1], sel=sel[0], out=aMuxd1);
    Mux (a=a[2], b=b[2], sel=sel[0], out=aMuxd2);
    Mux (a=a[3], b=b[3], sel=sel[0], out=aMuxd3);
    Mux (a=a[4], b=b[4], sel=sel[0], out=aMuxd4);
    Mux (a=a[5], b=b[5], sel=sel[0], out=aMuxd5);
    Mux (a=a[6], b=b[6], sel=sel[0], out=aMuxd6);
    Mux (a=a[7], b=b[7], sel=sel[0], out=aMuxd7);
    Mux (a=a[8], b=b[8], sel=sel[0], out=aMuxd8);
    Mux (a=a[9], b=b[9], sel=sel[0], out=aMuxd9);
    Mux (a=a[10], b=b[10], sel=sel[0], out=aMuxd10);
    Mux (a=a[11], b=b[11], sel=sel[0], out=aMuxd11);
    Mux (a=a[12], b=b[12], sel=sel[0], out=aMuxd12);
    Mux (a=a[13], b=b[13], sel=sel[0], out=aMuxd13);
    Mux (a=a[14], b=b[14], sel=sel[0], out=aMuxd14);
    Mux (a=a[15], b=b[15], sel=sel[0], out=aMuxd15);


    Mux (a=c[0], b=d[0], sel=sel[0], out=bMuxd0);
    Mux (a=c[1], b=d[1], sel=sel[0], out=bMuxd1);
    Mux (a=c[2], b=d[2], sel=sel[0], out=bMuxd2);
    Mux (a=c[3], b=d[3], sel=sel[0], out=bMuxd3);
    Mux (a=c[4], b=d[4], sel=sel[0], out=bMuxd4);
    Mux (a=c[5], b=d[5], sel=sel[0], out=bMuxd5);
    Mux (a=c[6], b=d[6], sel=sel[0], out=bMuxd6);
    Mux (a=c[7], b=d[7], sel=sel[0], out=bMuxd7);
    Mux (a=c[8], b=d[8], sel=sel[0], out=bMuxd8);
    Mux (a=c[9], b=d[9], sel=sel[0], out=bMuxd9);
    Mux (a=c[10], b=d[10], sel=sel[0], out=bMuxd10);
    Mux (a=c[11], b=d[11], sel=sel[0], out=bMuxd11);
    Mux (a=c[12], b=d[12], sel=sel[0], out=bMuxd12);
    Mux (a=c[13], b=d[13], sel=sel[0], out=bMuxd13);
    Mux (a=c[14], b=d[14], sel=sel[0], out=bMuxd14);
    Mux (a=c[15], b=d[15], sel=sel[0], out=bMuxd15);

    Mux (a=aMuxd0, b=bMuxd0, sel=sel[1], out=out[0]);
    Mux (a=aMuxd1, b=bMuxd1, sel=sel[1], out=out[1]);
    Mux (a=aMuxd2, b=bMuxd2, sel=sel[1], out=out[2]);
    Mux (a=aMuxd3, b=bMuxd3, sel=sel[1], out=out[3]);
    Mux (a=aMuxd4, b=bMuxd4, sel=sel[1], out=out[4]);
    Mux (a=aMuxd5, b=bMuxd5, sel=sel[1], out=out[5]);
    Mux (a=aMuxd6, b=bMuxd6, sel=sel[1], out=out[6]);
    Mux (a=aMuxd7, b=bMuxd7, sel=sel[1], out=out[7]);
    Mux (a=aMuxd8, b=bMuxd8, sel=sel[1], out=out[8]);
    Mux (a=aMuxd9, b=bMuxd9, sel=sel[1], out=out[9]);
    Mux (a=aMuxd10, b=bMuxd10, sel=sel[1], out=out[10]);
    Mux (a=aMuxd11, b=bMuxd11, sel=sel[1], out=out[11]);
    Mux (a=aMuxd12, b=bMuxd12, sel=sel[1], out=out[12]);
    Mux (a=aMuxd13, b=bMuxd13, sel=sel[1], out=out[13]);
    Mux (a=aMuxd14, b=bMuxd14, sel=sel[1], out=out[14]);
    Mux (a=aMuxd15, b=bMuxd15, sel=sel[1], out=out[15]);
}
